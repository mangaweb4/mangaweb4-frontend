// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "history.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { History } from "./history";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { HistoryListResponse } from "./history";
import type { HistoryListRequest } from "./history";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service History
 */
export interface IHistoryClient {
    /**
     * @generated from protobuf rpc: List
     */
    list(input: HistoryListRequest, options?: RpcOptions): UnaryCall<HistoryListRequest, HistoryListResponse>;
}
/**
 * @generated from protobuf service History
 */
export class HistoryClient implements IHistoryClient, ServiceInfo {
    typeName = History.typeName;
    methods = History.methods;
    options = History.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: List
     */
    list(input: HistoryListRequest, options?: RpcOptions): UnaryCall<HistoryListRequest, HistoryListResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<HistoryListRequest, HistoryListResponse>("unary", this._transport, method, opt, input);
    }
}
