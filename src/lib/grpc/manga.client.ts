// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "manga.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Manga } from "./manga";
import type { MangaPageImageResponse } from "./manga";
import type { MangaPageImageRequest } from "./manga";
import type { MangaUpdateCoverResponse } from "./manga";
import type { MangaUpdateCoverRequest } from "./manga";
import type { MangaSetFavoriteResponse } from "./manga";
import type { MangaSetFavoriteRequest } from "./manga";
import type { MangaThumbnailResponse } from "./manga";
import type { MangaThumbnailRequest } from "./manga";
import type { MangaDetailResponse } from "./manga";
import type { MangaDetailRequest } from "./manga";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MangaListResponse } from "./manga";
import type { MangaListRequest } from "./manga";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Manga
 */
export interface IMangaClient {
    /**
     * @generated from protobuf rpc: List
     */
    list(input: MangaListRequest, options?: RpcOptions): UnaryCall<MangaListRequest, MangaListResponse>;
    /**
     * @generated from protobuf rpc: Detail
     */
    detail(input: MangaDetailRequest, options?: RpcOptions): UnaryCall<MangaDetailRequest, MangaDetailResponse>;
    /**
     * @generated from protobuf rpc: Thumbnail
     */
    thumbnail(input: MangaThumbnailRequest, options?: RpcOptions): UnaryCall<MangaThumbnailRequest, MangaThumbnailResponse>;
    /**
     * @generated from protobuf rpc: SetFavorite
     */
    setFavorite(input: MangaSetFavoriteRequest, options?: RpcOptions): UnaryCall<MangaSetFavoriteRequest, MangaSetFavoriteResponse>;
    /**
     * @generated from protobuf rpc: UpdateCover
     */
    updateCover(input: MangaUpdateCoverRequest, options?: RpcOptions): UnaryCall<MangaUpdateCoverRequest, MangaUpdateCoverResponse>;
    /**
     * @generated from protobuf rpc: PageImage
     */
    pageImage(input: MangaPageImageRequest, options?: RpcOptions): UnaryCall<MangaPageImageRequest, MangaPageImageResponse>;
}
/**
 * @generated from protobuf service Manga
 */
export class MangaClient implements IMangaClient, ServiceInfo {
    typeName = Manga.typeName;
    methods = Manga.methods;
    options = Manga.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: List
     */
    list(input: MangaListRequest, options?: RpcOptions): UnaryCall<MangaListRequest, MangaListResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MangaListRequest, MangaListResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Detail
     */
    detail(input: MangaDetailRequest, options?: RpcOptions): UnaryCall<MangaDetailRequest, MangaDetailResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<MangaDetailRequest, MangaDetailResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Thumbnail
     */
    thumbnail(input: MangaThumbnailRequest, options?: RpcOptions): UnaryCall<MangaThumbnailRequest, MangaThumbnailResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<MangaThumbnailRequest, MangaThumbnailResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetFavorite
     */
    setFavorite(input: MangaSetFavoriteRequest, options?: RpcOptions): UnaryCall<MangaSetFavoriteRequest, MangaSetFavoriteResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<MangaSetFavoriteRequest, MangaSetFavoriteResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateCover
     */
    updateCover(input: MangaUpdateCoverRequest, options?: RpcOptions): UnaryCall<MangaUpdateCoverRequest, MangaUpdateCoverResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<MangaUpdateCoverRequest, MangaUpdateCoverResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: PageImage
     */
    pageImage(input: MangaPageImageRequest, options?: RpcOptions): UnaryCall<MangaPageImageRequest, MangaPageImageResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<MangaPageImageRequest, MangaPageImageResponse>("unary", this._transport, method, opt, input);
    }
}
